// Rachel Wyetzner and Sakin Kirti, 10/13/21
// Proteoglycan Quantification for the Atit Lab 

// This macro should be used when you have pre-cropped images that exclude hair follicles of RGB Trichrome
// stained skin and want to put them through ImajeJ for quantification of proteoglycan area and ECM area.\

// This macro can be used with 10x images only. If trying to run other magnification images through, 
// you must change the scale value located in the for loop

// This macro performs 3 functions
// 1. thresholds area of the ECM
// 2. color thresholds area of proteoglycans (blue)
// 3. exports results as a csv. file

// ------------------

// main method - runs the program
function main() {

	// first get the input and output directories from the user
	print("Choose the directory that contains pre-cropped RGB Trichrome Images");
	inputDir = getDir("Choose the directory that contains pre-cropped RGB Trichrome Images");
	fileList = getFileList(inputDir); // gets the list of files in the input directory
	
	print("Choose the directory where 16-bit grayscale images should be saved");
	grayDir = getDir("Where should 16-bit grayscale images be saved?");
	
	print("Choose the directory where proteoglycan thresholded images should be saved");
	proteoglycanDir = getDir("Where should proteoglycan thresholded images be saved?");
	
	// notifies user of number of images to process
	print(fileList.length + " images to process");
	print("");
	
	// loops through the file list and performs the 3 necessary functions on each
	for(i=1; i<=fileList.length; i++){ 
	
		fileName = fileList[i-1]; // saves file name in var
		
		open(inputDir+fileName); // starting to threshold first image
		print("Thresholding image " + i);
	
		// set scale for images
		run("Set Scale...", "known=100 pixel=313 unit=um"); 
	
		// thresholds for ECM area
		selectWindow(fileName);
		ECMThresholding(fileName);
		
		// this set of code performs color thresholding and area measuring for proteoglycans
		/*
    open(inputDir + fileName);
		selectWindow(fileName);
		proteoglycanThresholding(fileName); 
    */
		
	}

	// saves the results table to a csv file in proteoglycanDir
	saveAs("Results", proteoglycanDir + "ECM_results.csv");
	print("");
	print("Saved the results table to the file");

	// close all open windows
	run("Close All");
	
}

//--------------------------------

// performs proteoglycan thresholding to get proteoglycan area
// @param fileName - tells the function which image to perform on
// @return nothing
// @output saves the measurement to the measurements table
function proteoglycanThresholding(fileName) { 
	
	// Color Thresholder 2.3.0/1.53f
	// Autogenerated macro, single images only!
	min=newArray(3);
	max=newArray(3);
	filter=newArray(3);
	a=getTitle();
	call("ij.plugin.frame.ColorThresholder.RGBtoLab");
	run("RGB Stack");
	run("Convert Stack to Images");
	selectWindow("Red");
	rename("0");
	selectWindow("Green");
	rename("1");
	selectWindow("Blue");
	rename("2");
	min[0]=0;
	max[0]=190;
	filter[0]="pass";
	min[1]=0;
	max[1]=190;
	filter[1]="pass";
	min[2]=0;
	max[2]=120;
	filter[2]="pass";
	for (i=0;i<3;i++){
	  selectWindow(""+i);
	  setThreshold(min[i], max[i]);
	  run("Convert to Mask");
	  if (filter[i]=="stop")  run("Invert");
	}
	imageCalculator("AND create", "0","1");
	imageCalculator("AND create", "Result of 0","2");
	for (i=0;i<3;i++){
	  selectWindow(""+i);
	  close();
	}
	selectWindow("Result of 0");
	close();
	selectWindow("Result of Result of 0");
	rename(a);

	// saves the black and white image
	saveAs("Tiff", proteoglycanDir + fileName + "proteoglycan area");

	// run regular thresholding on the BW color thresholded images
	setAutoThreshold("Default");
	setThreshold(255, 255);
	setThreshold(255, 255);
	setThreshold(255, 255);
	
	// measure and then close the images
	run("Set Measurements...", "area limit display redirect=None decimal=5");
	run("Measure");
	close("*");
	
}

// performs thresholding to get ECM area
// @param fileName - tells the function which image to perform on
// @return nothing
// @output saves the measurement to the measurements table
function ECMThresholding(fileName) {

	// converts image to 16-bit grayscale
	run("16-bit"); 
	saveAs("Tiff", grayDir + fileName + "BW"); // saves image to the grayDir specified by the user
	
	// this set of code performs thresholding and area measuring for ECM 
	setAutoThreshold("Default");
	setThreshold(0, 215);
	setThreshold(0, 215);
	setThreshold(0, 215);
	
	// measures and closes the image
	run("Set Measurements...", "area limit display redirect=None decimal=5");
	run("Measure");
	close();
}

main();
